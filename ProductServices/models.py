from django.db import models

from UserServices.models import Users

class Category(models.Model):
   id = models.AutoField(primary_key=True)
   name = models.CharField(max_length=255, blank=True, null=True)
   image = models.TextField()
   description = models.TextField()
   display_order = models.IntegerField(default=0)
   domain_user_id= models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='domain_user_id_catagory')
   parent_id = models.ForeignKey('self', on_delete=models.CASCADE, blank=True, null=True)
   added_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='added_by_user_id_catagory')
   created_at = models.DateTimeField(auto_now_add=True)
   updated_at = models.DateTimeField(auto_now=True)

class Products(models.Model):
   id = models.AutoField(primary_key=True)
   name = models.CharField(max_length=255, blank=True, null=True)
   image = models.JSONField()
   description = models.TextField()
   specifications = models.JSONField()
   html_description = models.TextField()
   highlight = models.JSONField()
   sku = models.CharField(max_length=255, blank=True, null=True)
   initial_buying_price = models.FloatField()
   initla_selling_price = models.FloatField()
   weight = models.FloatField(blank=True, null=True)
   dimensions = models.CharField(default='0x0x0', max_length=255)
   uom = models.CharField(max_length=255)
   color = models.CharField(max_length=255)
   tax_percentage = models.FloatField()
   brand = models.CharField(max_length=255)
   brand_model = models.CharField(max_length=255)
   seo_title = models.CharField(max_length=255, blank=True, null=True)
   seo_description = models.TextField(blank=True, null=True)
   seo_keywords = models.JSONField(blank=True, null=True)
   additional_information = models.JSONField(blank=True, null=True)
   status = models.CharField(max_length=255, choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], default='ACTIVE')
   category_id = models.ForeignKey(Category, on_delete=models.CASCADE, blank=True, null=True, related_name='category_id_products')
   domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='domain_user_id_products')
   added_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='added_by_user_id_products')
   created_at = models.DateTimeField(auto_now_add=True)
   updated_at = models.DateTimeField(auto_now=True)


class ProductQuestion(models.Model):
   id = models.AutoField(primary_key=True)
   product_id = models.ForeignKey(Products, on_delete=models.CASCADE, related_name='product_id')
   question = models.TextField()
   answer = models.TextField(blank=True, null=True)
   status = models.CharField(max_length=255, choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], default='ACTIVE')
   domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='domain_user_id_product_question')
   question_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='question_user_id_product_question')
   answer_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='answer_user_id_product_question')
   created_at = models.DateTimeField(auto_now_add=True)
   updated_at = models.DateTimeField(auto_now=True)

class ProductReview(models.Model):
    id = models.AutoField(primary_key=True)
    product_id = models.ForeignKey(Products, on_delete=models.CASCADE, related_name='product_id_review')
    rating = models.FloatField()
    review = models.TextField()
    review_images = models.JSONField(blank=True, null=True)
    status = models.CharField(max_length=255, choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], default='ACTIVE')
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='domain_user_id_product_review')
    review_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, blank=True, null=True, related_name='review_user_id_product_review')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
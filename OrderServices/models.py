from django.db import models

from InventoryServices.models import Warehouse
from ProductServices.models import Products
from UserServices.models import Users

class PurchaseOrder(models.Model):
    id = models.AutoField(primary_key=True)
    warehouse_id = models.ForeignKey(Warehouse, on_delete=models.CASCADE, related_name='purchase_orders')
    order_number = models.CharField(max_length=255, unique=True)
    supplier_name = models.CharField(max_length=255)
    supplier_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_supplier', blank=True, null=True)
    last_updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_last_updated_by', blank=True, null=True)
    po_date = models.DateTimeField(auto_now_add=True)
    po_code = models.CharField(max_length=255, unique=True, blank=True, null=True)
    expeted_delivery_date = models.DateTimeField(blank=True, null=True)
    payment_terms = models.CharField(max_length=255, blank=True, null=True, choices=[('CASH', 'Cash'), ('CREDIT', 'Credit'), ('ON_DELIVERY', 'On Delivery'), ("ONLINE", "Online"),('CHEQUE',"cheque"),('OTHER', 'Other')])
    payment_status = models.CharField(max_length=50, choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('PARTIALLY_PAID', 'Partially Paid'),("CANCELLED", 'Cancelled')], default='PENDING')
    total_amount = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    additional_information = models.JSONField(blank=True, null=True)
    paid_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    payment_mode = models.CharField(max_length=50, choices=[('CASH', 'Cash'), ('CREDIT', 'Credit'), ('ONLINE', 'Online'), ('CHEQUE', 'Cheque'), ('OTHER', 'Other')], default='CASH')
    due_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    status = models.CharField(max_length=50, choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'),('RETURNED', "Returned")], default='DRAFT')
    shipping_charges = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_type = models.CharField(max_length=50, choices=[('FREE','FREE'),('PAID','PAID')], default='PAID')
    shipping_tax_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_tax_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    additional_information = models.JSONField(blank=True, null=True)
    created_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_created_by', blank=True, null=True)
    updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_updated_by', blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_domain_user', blank=True, null=True)
    approved_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_approved_by', blank=True, null=True)
    approved_at = models.DateTimeField(blank=True, null=True)
    cancelled_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_cancelled_by', blank=True, null=True)
    cancelled_reason = models.TextField(blank=True, null=True)
    recieved_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_received_by', blank=True, null=True)
    received_at = models.DateTimeField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    returned_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorder_returned_by', blank=True, null=True)
    returned_at = models.DateTimeField(blank=True, null=True)


class PurchaseOrderItem(models.Model):
    id = models.AutoField(primary_key=True)
    purchase_order_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, related_name='purchaseorderitem_purchase_order')
    product_id = models.ForeignKey(Products, on_delete=models.CASCADE, related_name='purchaseorderitem_product')
    po_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, related_name='purchaseorderitem_po')
    selling_price = models.DecimalField(max_digits=10, decimal_places=2)
    amount_paid = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    amount_returned = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    amount_cancelled = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    amount_ordered = models.DecimalField(max_digits=10, decimal_places=2)
    quantity_ordered= models.IntegerField()
    quantity_received = models.IntegerField(default=0)
    quantity_cancelled = models.IntegerField(default=0)
    quantity_pending = models.IntegerField(default=0)
    quantity_returned = models.IntegerField(default=0)
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_tax_percentage = models.DecimalField(max_digits=5, decimal_places=2, default=0.00)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_cancelled_tax_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)  # fixed double underscore
    buying_price = models.DecimalField(max_digits=10, decimal_places=2)
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_percentage = models.DecimalField(max_digits=5, decimal_places=2, default=0.00)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    discount_type = models.CharField(max_length=50, choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed')], default='PERCENTAGE')
    additional_information = models.JSONField(blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderitem_domain_user', blank=True, null=True)
    created_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderitem_created_by', blank=True, null=True)
    updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderitem_updated_by', blank=True, null=True)
    cancelled_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderitem_cancelled_by', blank=True, null=True)
    cancelled_reason = models.TextField(blank=True, null=True)
    cancelled_at = models.DateTimeField(blank=True, null=True)
    recieved_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderitem_received_by', blank=True, null=True)
    received_at = models.DateTimeField(blank=True, null=True)
    approved_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderitem_approved_by', blank=True, null=True)
    approved_at = models.DateTimeField(blank=True, null=True)
    status = models.CharField(max_length=50, choices=[('DRAFTS', 'Drafts'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RETURNED', 'Returned')], default='DRAFTS')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class PurchaseOrderInwardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    purchase_order = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, related_name='purchaseorderinwardedlog_purchase_order')
    invoice_path = models.TextField(blank=True, null=True)
    invoice_number = models.CharField(max_length=255, blank=True, null=True)
    notes = models.CharField()
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderinwardedlog_domain_user', blank=True, null=True)
    inwarded_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderinwardedlog_inwarded_by', blank=True, null=True)
    inwarded_at = models.DateTimeField(auto_now_add=True)
    additional_information = models.JSONField(blank=True, null=True)
    status = models.CharField(max_length=50, choices=[('DRAFTS', 'Drafts'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'),('PARTIALLY RECIEVED','PARTIALLY RECIEVED'), ('RECIEVED','RECIEVED'), ('RETURNED', 'Returned')], default='DRAFTS')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class PurchaseOrderItemInvardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    purchase_order_item = models.ForeignKey(PurchaseOrderItem, on_delete=models.CASCADE, related_name='purchaseorderiteminvardedlog_purchase_order_item')
    inwarded_quantity = models.IntegerField()
    price = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    discount_type = models.CharField(max_length=50, choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed')], default='PERCENTAGE')
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_tax_percentage = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    inwarded_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderiteminvardedlog_inwarded_by', blank=True, null=True)
    inwarded_at = models.DateTimeField(auto_now_add=True)
    additional_information = models.JSONField(blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderiteminvardedlog_domain_user', blank=True, null=True)
    status = models.CharField(max_length=50, choices=[('DRAFTS', 'Drafts'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RETURNED', 'Returned')], default='DRAFTS')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class PurchaseOrderLogs(models.Model):
    id = models.AutoField(primary_key=True)
    po_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, related_name='purchaseorderlogs_po')
    comment = models.TextField(blank=True, null=True)
    created_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderlogs_created_by', blank=True, null=True)
    additional_information = models.JSONField(blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='purchaseorderlogs_domain_user', blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class SalesOrder(models.Model):
    id = models.AutoField(primary_key=True)
    order_number = models.CharField(max_length=255, unique=True)
    customer_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_customer', blank=True, null=True)
    last_updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_last_updated_by', blank=True, null=True)
    so_date = models.DateTimeField(auto_now_add=True)
    so_code = models.CharField(max_length=255, unique=True, blank=True, null=True)
    expeted_delivery_date = models.DateTimeField(blank=True, null=True)
    payment_terms = models.CharField(max_length=255, blank=True, null=True, choices=[('CASH', 'Cash'), ('CREDIT', 'Credit'), ('ON_DELIVERY', 'On Delivery'), ("ONLINE", "Online"),('CHEQUE',"cheque"),('OTHER', 'Other')])
    payment_status = models.CharField(max_length=50, choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('PARTIALLY_PAID', 'Partially Paid'),("CANCELLED", 'Cancelled')], default='PENDING')
    total_amount = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)
    additional_information = models.JSONField(blank=True, null=True)
    paid_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    payment_mode = models.CharField(max_length=50, choices=[('CASH', 'Cash'), ('CREDIT', 'Credit'), ('ONLINE', 'Online'), ('CHEQUE', 'Cheque'), ('OTHER', 'Other')], default='CASH')
    due_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    status = models.CharField(max_length=50, choices=[('DRAFT', 'Draft'), ('PENDING', 'Pending'), ('DELIVERED', 'DELIVERED'), ('REJECTED', 'Rejected'),('PARTIALLY DELIVERED','PARTIALLY DELIVERED') ,('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'),('RETURNED', "Returned")], default='DRAFT')
    shipping_charges = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_type = models.CharField(max_length=50, choices=[('FREE','FREE'),('PAID','PAID')], default='PAID')
    shipping_tax_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_tax_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    additional_information = models.JSONField(blank=True, null=True)
    created_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_created_by', blank=True, null=True)
    updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_updated_by', blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_domain_user', blank=True, null=True)
    approved_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_approved_by', blank=True, null=True)
    approved_at = models.DateTimeField(blank=True, null=True)
    cancelled_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_cancelled_by', blank=True, null=True)
    cancelled_reason = models.TextField(blank=True, null=True)
    recieved_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_received_by', blank=True, null=True)
    received_at = models.DateTimeField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    returned_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorder_returned_by', blank=True, null=True)
    returned_at = models.DateTimeField(blank=True, null=True)

class SalesOrderItem(models.Model):
    id = models.AutoField(primary_key=True)
    purchase_order_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, related_name='salesorderitem_purchase_order')
    product_id = models.ForeignKey(Products, on_delete=models.CASCADE, related_name='salesorderitem_product')
    so_id = models.ForeignKey(SalesOrder, on_delete=models.CASCADE, related_name='salesorderitem_so')
    purchase_price = models.DecimalField(max_digits=10, decimal_places=2)
    amount_paid = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    amount_returned = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    amount_cancelled = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    amount_ordered = models.DecimalField(max_digits=10, decimal_places=2)
    quantity_ordered= models.IntegerField()
    quantity_delivered = models.IntegerField(default=0)
    quantity_shipped = models.IntegerField(default=0)
    quantity_cancelled = models.IntegerField(default=0)
    quantity_pending = models.IntegerField(default=0)
    quantity_returned = models.IntegerField(default=0)
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_tax_percentage = models.DecimalField(max_digits=5, decimal_places=2, default=0.00)
    shipping_cancelled_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_cancelled_tax_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)  # fixed double underscore
    total_amount = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    tax_amount = models.DecimalField(max_digits=10, decimal_places=2)
    discount_percentage = models.DecimalField(max_digits=5, decimal_places=2, default=0.00)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    discount_type = models.CharField(max_length=50, choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed')], default='PERCENTAGE')
    additional_information = models.JSONField(blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitem_domain_user', blank=True, null=True)
    created_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitem_created_by', blank=True, null=True)
    updated_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitem_updated_by', blank=True, null=True)
    cancelled_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitem_cancelled_by', blank=True, null=True)
    cancelled_reason = models.TextField(blank=True, null=True)
    cancelled_at = models.DateTimeField(blank=True, null=True)
    shipped_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitem_shipped_by', blank=True, null=True)
    shipped_at = models.DateTimeField(blank=True, null=True)
    approved_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitem_approved_by', blank=True, null=True)
    approved_at = models.DateTimeField(blank=True, null=True)
    status = models.CharField(max_length=50, choices=[('DRAFTS', 'Drafts'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RETURNED', 'Returned'), ('PARTIALLY DELIVERED','PARTIALLY DELIVERED'),('DELIVERED','DELIVERED')], default='DRAFTS')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class SalesOrderOutwardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    so_id = models.ForeignKey(SalesOrder, on_delete=models.CASCADE, related_name='salesorderoutwardedlog_so')
    invoice_path = models.TextField(blank=True, null=True)
    invoice_number = models.CharField(max_length=255, blank=True, null=True)
    notes = models.CharField()
    status = models.CharField(max_length=50, choices=[('DRAFTS', 'Drafts'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'),('PARTIALLY DELIVERED','PARTIALLY DELIVERED'), ('DELIVERED','DELIVERED'),('RETURNED', 'Returned')], default='DRAFTS')
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderoutwardedlog_domain_user', blank=True, null=True)
    outwarded_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderoutwardedlog_outwarded_by', blank=True, null=True)
    outwarded_at = models.DateTimeField(auto_now_add=True)
    additional_information = models.JSONField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class SalesOrderItemOutwardedLog(models.Model):
    id = models.AutoField(primary_key=True)
    so_item_id = models.ForeignKey(SalesOrderItem, on_delete=models.CASCADE, related_name='salesorderitemoutwardedlog_so_item')
    outwarded_quantity = models.IntegerField()
    price = models.DecimalField(max_digits=10, decimal_places=2)
    tax_percentage = models.DecimalField(max_digits=5, decimal_places=2)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    discount_type = models.CharField(max_length=50, choices=[('PERCENTAGE', 'Percentage'), ('FIXED', 'Fixed')], default='PERCENTAGE')
    shipping_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    shipping_tax_percentage = models.DecimalField(max_digits=10, decimal_places=2, default=0.00)
    outwarded_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitemoutwardedlog_outwarded_by', blank=True, null=True)
    outwarded_at = models.DateTimeField(auto_now_add=True)
    additional_information = models.JSONField(blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderitemoutwardedlog_domain_user', blank=True, null=True)
    status = models.CharField(max_length=50, choices=[('DRAFTS', 'Drafts'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'),('PARTIALLY DELIVERED','PARTIALLY DELIVERED'), ('DELIVERED','DELIVERED'),('RETURNED', 'Returned')], default='DRAFTS')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

class SalesOrderLogs(models.Model):
    id = models.AutoField(primary_key=True)
    so_id = models.ForeignKey(PurchaseOrder, on_delete=models.CASCADE, related_name='salesorderlogs_so')
    comment = models.TextField(blank=True, null=True)
    created_by_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderlogs_created_by', blank=True, null=True)
    additional_information = models.JSONField(blank=True, null=True)
    domain_user_id = models.ForeignKey(Users, on_delete=models.CASCADE, related_name='salesorderlogs_domain_user', blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)